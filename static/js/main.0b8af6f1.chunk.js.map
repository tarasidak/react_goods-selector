{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","products","App","state","productName","goodsList","toggleSelectedGoods","selectedId","name","isSelected","push","deleteIndex","indexOf","splice","setState","prevState","length","join","map","good","id","this","index","className","key","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sOAGMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAGIC,EAAW,GA2EFC,E,4MAxEbC,MAAQ,CACNC,YAAa,QACbC,UAAW,I,EAabC,oBAAsB,SAACC,EAAYC,EAAMC,GAKvC,GAJKA,GACHR,EAASS,KAAKF,GAGZC,EAAY,CACd,IAAME,EAAcV,EAASW,QAAQJ,GAErCP,EAASY,OAAOF,EAAa,GAG/B,EAAKG,UAAS,SAAAC,GAAS,MAAK,CAC1BX,YAAiC,IAApBH,EAASe,OAAe,QAAUf,EAASgB,KAAK,MAC7DZ,UAAWU,EAAUV,UAAUa,KAAI,SAACC,GAClC,OAAIA,EAAKC,KAAOb,EACP,2BACFY,GADL,IAEEV,YAAaA,IAIVU,U,uDA/Bb,WACEE,KAAKP,SAAS,CACZT,UAAWL,EAAgBkB,KAAI,SAACC,EAAMG,GAAP,MAAkB,CAC/CF,GAAIE,EACJd,KAAMW,EACNV,YAAY,U,oBA+BlB,WAAU,IAAD,SAC4BY,KAAKlB,MAAhCC,EADD,EACCA,YAAaC,EADd,EACcA,UAErB,OACE,yBAAKkB,UAAU,OACb,+CAEGnB,GAEH,4BACGC,EAAUW,QAAUX,EAAUa,KAAI,gBAAGE,EAAH,EAAGA,GAAIZ,EAAP,EAAOA,KAAMC,EAAb,EAAaA,WAAb,OACjC,wBACEe,IAAKJ,EACLG,UAAS,UAAKd,EAAa,cAAgB,eAE1CD,EACD,4BACEe,UAAS,cAASd,EAAa,UAAY,aAC3CgB,KAAK,SACLC,QAAS,kBAAM,EAAKpB,oBAAoBc,EAAIZ,EAAMC,KAEhDA,EAAa,SAAW,iB,GA/DxBkB,IAAMC,WCdxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.0b8af6f1.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst products = [];\n\nclass App extends React.Component {\n  state = {\n    productName: ' none',\n    goodsList: [],\n  }\n\n  componentDidMount() {\n    this.setState({\n      goodsList: goodsFromServer.map((good, index) => ({\n        id: index,\n        name: good,\n        isSelected: false,\n      })),\n    });\n  }\n\n  toggleSelectedGoods = (selectedId, name, isSelected) => {\n    if (!isSelected) {\n      products.push(name);\n    }\n\n    if (isSelected) {\n      const deleteIndex = products.indexOf(name);\n\n      products.splice(deleteIndex, 1);\n    }\n\n    this.setState(prevState => ({\n      productName: products.length === 0 ? ' none' : products.join(', '),\n      goodsList: prevState.goodsList.map((good) => {\n        if (good.id === selectedId) {\n          return {\n            ...good,\n            isSelected: !isSelected,\n          };\n        }\n\n        return good;\n      }),\n    }));\n  }\n\n  render() {\n    const { productName, goodsList } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          Selected good: -\n          {productName}\n        </h1>\n        <ul>\n          {goodsList.length && goodsList.map(({ id, name, isSelected }) => (\n            <li\n              key={id}\n              className={`${isSelected ? 'list-yellow' : 'list-white'}`}\n            >\n              {name}\n              <button\n                className={`btn ${isSelected ? 'btn-red' : 'btn-green'}`}\n                type=\"button\"\n                onClick={() => this.toggleSelectedGoods(id, name, isSelected)}\n              >\n                { isSelected ? 'Remove' : 'Add' }\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}